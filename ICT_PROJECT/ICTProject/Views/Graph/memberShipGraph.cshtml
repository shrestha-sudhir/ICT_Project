
@{
    ViewBag.Title = "membershipGraph";
}

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Visualisation</title>
</head>

<body>

    <div class="container">
        <h2>Membership Graph    </h2>
        <div id="vis"></div>
    </div>

    <script src="~/Scripts/jquery-1.10.2.js"></script>
    <script src="~/Scripts/bootstrap.js"></script>
    <script src="~/Scripts/d3.js"></script>
    <script>

        // placeholder data
        var data = [
            {
                Name: "Region 1",
                Count: 45
            }, {
                Name: "Region 2",
                Count: 96
            }, {
                Name: "Region 3",
                Count: 37
            }, {
                Name: "Region 4",
                Count: 72
            }, {
                Name: "Region 5",
                Count: 54
            }, {
                Name: "Region 6",
                Count: 20
            }];

        // sort the data by highest count first
        data.sort(function (a, b) { return b.Count - a.Count });

        var margin = { top: 0, right: 0, bottom: 30, left: 20 },
            height = 400 - margin.top - margin.bottom,
            width = 600 - margin.left - margin.right,
            barWidth = 50,
            barOffset = 5;

        var yScale = d3.scaleLinear()
            .domain([0, d3.max(data.map(function (d) {
                return d.Count;
            }))])
            .range([0, height]);

        var yAxisValues = d3.scaleLinear()
        .domain([0, d3.max(data.map(function (d) {
            return d.Count;
        }))])
        .range([height, 0]);

        var yAxisTicks = d3.axisLeft(yAxisValues)
        .ticks(10);

        var xScale = d3.scaleBand()
            .domain(data.map(function (d) {
                return d.Count;
            }))
            .paddingInner(.2)
            .paddingOuter(.1)
            .range([0, width]);

        var tooltip = d3.select('body')
            .append('div')
            .style('position', 'absolute')
            .style('padding', '0 10px')
            .style('background', 'white')
            .style('opacity', 0);

        var myChart = d3.select('#vis').append('svg')
            .attr('width', width + margin.left + margin.right)
            .attr('height', height + margin.top + margin.bottom)
            .append('g')
            .attr('transform', 'translate(' + margin.left + ',' + margin.right + ')')
            .selectAll('rect').data(data.map(function (d) {
                return d.Count;
            }))
            .enter().append('rect')
                .style('fill', 'steelblue')
                .attr('width', function (d) {
                    return xScale.bandwidth();
                })
                .attr('height', 0)

                .attr('x', function (d) {
                    return xScale(d);
                })
                .attr('y', height)

            .on('mouseover', function (d) {

                tooltip.transition().duration(200)
                    .style('opacity', .9)

                tooltip.html(
                    '<div style="font-size: 2rem; font-weight: bold">' +
                        d
                        + '</div>'
                )
                    .style('left', (d3.event.pageX - 35) + 'px')
                    .style('top', (d3.event.pageY - 30) + 'px')

                d3.select(this)
                    .transition()
                    .duration(200)
                    .style('opacity', .5)
            })

            .on('mouseout', function (d) {
                tooltip.transition().duration(200)
                    .style('opacity', 0)
                d3.select(this)
                    .transition()
                    .duration(200)
                    .style('opacity', 1)
            });

        yGuide = d3.select('#vis svg').append('g')
            .attr('transform', 'translate(20,0)')
            .call(yAxisTicks)

        myChart.transition()
            .attr("height", function (d) {
                return yScale(d);
            })
            .attr('y', function (d) {
                return height - yScale(d);
            })
            .delay(function (d, i) {
                return i * 20;
            })
            .duration(1000)
            .ease(d3.easeBounceOut);

    </script>
</body>

